#loc = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0)
module {
  tt.func public @_triton_gemm_a8w8_kernel(%arg0: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg1: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg2: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg3: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg4: !tt.ptr<f16> {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg5: i32 loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":78:0)) attributes {noinline = false} {
    %c255_i32 = arith.constant 255 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %c15_i32 = arith.constant 15 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<64xf16> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<16xf16> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<256> : tensor<256x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<16x256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<16x64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.addi %arg5, %c15_i32 : i32 loc(#loc64)
    %2 = arith.divsi %1, %c16_i32 : i32 loc(#loc65)
    %3 = arith.addi %arg6, %c63_i32 : i32 loc(#loc66)
    %4 = arith.divsi %3, %c64_i32 : i32 loc(#loc67)
    %5 = arith.divsi %0, %4 : i32 loc(#loc7)
    %6 = arith.subi %2, %5 : i32 loc(#loc8)
    %7 = arith.minsi %6, %c1_i32 : i32 loc(#loc9)
    %8 = arith.remsi %0, %7 : i32 loc(#loc10)
    %9 = arith.addi %5, %8 : i32 loc(#loc11)
    %10 = arith.remsi %0, %4 : i32 loc(#loc12)
    %11 = arith.divsi %10, %7 : i32 loc(#loc13)
    %12 = arith.muli %9, %c16_i32 : i32 loc(#loc14)
    %13 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc15)
    %14 = tt.splat %12 : i32 -> tensor<16xi32> loc(#loc16)
    %15 = arith.addi %14, %13 : tensor<16xi32> loc(#loc16)
    %16 = arith.muli %11, %c64_i32 : i32 loc(#loc17)
    %17 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc18)
    %18 = tt.splat %16 : i32 -> tensor<64xi32> loc(#loc19)
    %19 = arith.addi %18, %17 : tensor<64xi32> loc(#loc19)
    %20 = tt.splat %arg5 : i32 -> tensor<16xi32> loc(#loc20)
    %21 = arith.remsi %15, %20 {tt.contiguity = dense<16> : tensor<1xi32>, tt.divisibility = dense<16> : tensor<1xi32>} : tensor<16xi32> loc(#loc20)
    %22 = tt.splat %arg6 : i32 -> tensor<64xi32> loc(#loc21)
    %23 = arith.remsi %19, %22 {tt.contiguity = dense<64> : tensor<1xi32>, tt.divisibility = dense<64> : tensor<1xi32>} : tensor<64xi32> loc(#loc21)
    %24 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc22)
    %25 = tt.expand_dims %21 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc23)
    %26 = tt.splat %arg8 : i32 -> tensor<16x1xi32> loc(#loc24)
    %27 = arith.muli %25, %26 : tensor<16x1xi32> loc(#loc24)
    %28 = tt.expand_dims %24 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc25)
    %29 = tt.broadcast %27 : tensor<16x1xi32> -> tensor<16x256xi32> loc(#loc26)
    %30 = tt.broadcast %28 : tensor<1x256xi32> -> tensor<16x256xi32> loc(#loc26)
    %31 = arith.addi %29, %30 : tensor<16x256xi32> loc(#loc26)
    %32 = tt.splat %arg0 : !tt.ptr<i8> -> tensor<16x256x!tt.ptr<i8>> loc(#loc27)
    %33 = tt.addptr %32, %31 : tensor<16x256x!tt.ptr<i8>>, tensor<16x256xi32> loc(#loc27)
    %34 = tt.expand_dims %23 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc28)
    %35 = tt.splat %arg9 : i32 -> tensor<1x64xi32> loc(#loc29)
    %36 = arith.muli %34, %35 : tensor<1x64xi32> loc(#loc29)
    %37 = tt.expand_dims %24 {axis = 1 : i32} : tensor<256xi32> -> tensor<256x1xi32> loc(#loc30)
    %38 = tt.broadcast %36 : tensor<1x64xi32> -> tensor<256x64xi32> loc(#loc31)
    %39 = tt.broadcast %37 : tensor<256x1xi32> -> tensor<256x64xi32> loc(#loc31)
    %40 = arith.addi %38, %39 : tensor<256x64xi32> loc(#loc31)
    %41 = tt.splat %arg1 : !tt.ptr<i8> -> tensor<256x64x!tt.ptr<i8>> loc(#loc32)
    %42 = tt.addptr %41, %40 : tensor<256x64x!tt.ptr<i8>>, tensor<256x64xi32> loc(#loc32)
    %43 = arith.addi %arg7, %c255_i32 : i32 loc(#loc68)
    %44 = arith.divsi %43, %c256_i32 : i32 loc(#loc69)
    %45:3 = scf.for %arg11 = %c0_i32 to %44 step %c1_i32 iter_args(%arg12 = %cst_3, %arg13 = %33, %arg14 = %42) -> (tensor<16x64xi32>, tensor<16x256x!tt.ptr<i8>>, tensor<256x64x!tt.ptr<i8>>)  : i32 {
      %80 = tt.load %arg13 : tensor<16x256x!tt.ptr<i8>> loc(#loc35)
      %81 = tt.load %arg14 : tensor<256x64x!tt.ptr<i8>> loc(#loc36)
      %82 = tt.dot %80, %81, %arg12 : tensor<16x256xi8> * tensor<256x64xi8> -> tensor<16x64xi32> loc(#loc37)
      %83 = tt.addptr %arg13, %cst_2 : tensor<16x256x!tt.ptr<i8>>, tensor<16x256xi32> loc(#loc38)
      %84 = tt.addptr %arg14, %cst_1 : tensor<256x64x!tt.ptr<i8>>, tensor<256x64xi32> loc(#loc39)
      scf.yield %82, %83, %84 : tensor<16x64xi32>, tensor<16x256x!tt.ptr<i8>>, tensor<256x64x!tt.ptr<i8>> loc(#loc40)
    } loc(#loc34)
    %46 = tt.splat %arg3 : !tt.ptr<f16> -> tensor<16x!tt.ptr<f16>> loc(#loc41)
    %47 = tt.addptr %46, %15 : tensor<16x!tt.ptr<f16>>, tensor<16xi32> loc(#loc41)
    %48 = tt.splat %arg4 : !tt.ptr<f16> -> tensor<64x!tt.ptr<f16>> loc(#loc42)
    %49 = tt.addptr %48, %19 : tensor<64x!tt.ptr<f16>>, tensor<64xi32> loc(#loc42)
    %50 = arith.cmpi slt, %15, %20 : tensor<16xi32> loc(#loc43)
    %51 = tt.load %47, %50, %cst_0 cacheModifier = cg : tensor<16x!tt.ptr<f16>> loc(#loc44)
    %52 = arith.extf %51 : tensor<16xf16> to tensor<16xf32> loc(#loc45)
    %53 = arith.cmpi slt, %19, %22 : tensor<64xi32> loc(#loc46)
    %54 = tt.load %49, %53, %cst cacheModifier = cg : tensor<64x!tt.ptr<f16>> loc(#loc47)
    %55 = arith.extf %54 : tensor<64xf16> to tensor<64xf32> loc(#loc48)
    %56 = tt.expand_dims %52 {axis = 1 : i32} : tensor<16xf32> -> tensor<16x1xf32> loc(#loc49)
    %57 = arith.sitofp %45#0 : tensor<16x64xi32> to tensor<16x64xf32> loc(#loc50)
    %58 = tt.broadcast %56 : tensor<16x1xf32> -> tensor<16x64xf32> loc(#loc50)
    %59 = arith.mulf %57, %58 : tensor<16x64xf32> loc(#loc50)
    %60 = tt.expand_dims %55 {axis = 0 : i32} : tensor<64xf32> -> tensor<1x64xf32> loc(#loc51)
    %61 = tt.broadcast %60 : tensor<1x64xf32> -> tensor<16x64xf32> loc(#loc52)
    %62 = arith.mulf %59, %61 : tensor<16x64xf32> loc(#loc52)
    %63 = arith.truncf %62 : tensor<16x64xf32> to tensor<16x64xf16> loc(#loc53)
    %64 = tt.expand_dims %15 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc54)
    %65 = tt.splat %arg5 : i32 -> tensor<16x1xi32> loc(#loc55)
    %66 = arith.cmpi slt, %64, %65 : tensor<16x1xi32> loc(#loc55)
    %67 = tt.expand_dims %19 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc56)
    %68 = tt.splat %arg6 : i32 -> tensor<1x64xi32> loc(#loc57)
    %69 = arith.cmpi slt, %67, %68 : tensor<1x64xi32> loc(#loc57)
    %70 = tt.broadcast %66 : tensor<16x1xi1> -> tensor<16x64xi1> loc(#loc58)
    %71 = tt.broadcast %69 : tensor<1x64xi1> -> tensor<16x64xi1> loc(#loc58)
    %72 = arith.andi %70, %71 : tensor<16x64xi1> loc(#loc58)
    %73 = tt.splat %arg10 : i32 -> tensor<16x1xi32> loc(#loc59)
    %74 = arith.muli %73, %64 : tensor<16x1xi32> loc(#loc59)
    %75 = tt.splat %arg2 : !tt.ptr<f16> -> tensor<16x1x!tt.ptr<f16>> loc(#loc60)
    %76 = tt.addptr %75, %74 : tensor<16x1x!tt.ptr<f16>>, tensor<16x1xi32> loc(#loc60)
    %77 = tt.broadcast %76 : tensor<16x1x!tt.ptr<f16>> -> tensor<16x64x!tt.ptr<f16>> loc(#loc61)
    %78 = tt.broadcast %67 : tensor<1x64xi32> -> tensor<16x64xi32> loc(#loc61)
    %79 = tt.addptr %77, %78 : tensor<16x64x!tt.ptr<f16>>, tensor<16x64xi32> loc(#loc61)
    tt.store %79, %63, %72 : tensor<16x64x!tt.ptr<f16>> loc(#loc62)
    tt.return loc(#loc63)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":110:24)
#loc3 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/triton/language/standard.py":40:22)
#loc4 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":111:27)
#loc5 = loc("/opt/conda/envs/py_3.10/lib/python3.10/site-packages/triton/language/standard.py":40:28)
#loc6 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":112:27)
#loc7 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":114:22)
#loc8 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":116:35)
#loc9 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":116:48)
#loc10 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":117:33)
#loc11 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":117:27)
#loc12 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":118:19)
#loc13 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":118:40)
#loc14 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":124:17)
#loc15 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":124:40)
#loc16 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":124:27)
#loc17 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":125:17)
#loc18 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":125:40)
#loc19 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":125:27)
#loc20 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":126:48)
#loc21 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":127:48)
#loc22 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":128:22)
#loc23 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":129:22)
#loc24 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":129:33)
#loc25 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":129:48)
#loc26 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":129:45)
#loc27 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":129:18)
#loc28 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":130:22)
#loc29 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":130:33)
#loc30 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":130:48)
#loc31 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":130:45)
#loc32 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":130:18)
#loc33 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":136:24)
#loc34 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":140:22)
#loc35 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":143:20)
#loc36 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":144:20)
#loc37 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":146:33)
#loc38 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":148:18)
#loc39 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":149:18)
#loc40 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":149:8)
#loc41 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":166:37)
#loc42 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":167:37)
#loc43 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":168:55)
#loc44 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":168:24)
#loc45 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":168:93)
#loc46 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":169:55)
#loc47 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":169:24)
#loc48 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":169:93)
#loc49 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":170:42)
#loc50 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":170:32)
#loc51 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":171:42)
#loc52 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":171:32)
#loc53 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":172:23)
#loc54 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":175:22)
#loc55 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":175:33)
#loc56 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":175:47)
#loc57 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":175:58)
#loc58 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":175:39)
#loc59 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":176:29)
#loc60 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":176:17)
#loc61 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":176:48)
#loc62 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":177:21)
#loc63 = loc("/triton_dev/triton/283_int8_gemm_perf_investigation/test_int8_gemm.py":177:4)
#loc64 = loc(callsite(#loc3 at #loc4))
#loc65 = loc(callsite(#loc5 at #loc4))
#loc66 = loc(callsite(#loc3 at #loc6))
#loc67 = loc(callsite(#loc5 at #loc6))
#loc68 = loc(callsite(#loc3 at #loc33))
#loc69 = loc(callsite(#loc5 at #loc33))
